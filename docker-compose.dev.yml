# Development environment overrides
# Use with: docker compose -f docker-compose.yml -f docker-compose.dev.yml up

services:
  # Database - Development Configuration
  db:
    ports:
      - "5432:5432" # Expose database port for development tools
    environment:
      POSTGRES_LOG_STATEMENT: all # Log all SQL statements for debugging
      POSTGRES_LOG_MIN_DURATION_STATEMENT: 0 # Log all queries
    command: >
      postgres
      -c log_statement=all
      -c log_destination=stderr
      -c log_min_duration_statement=0
      -c shared_preload_libraries=pg_stat_statements

  # Backend - Development Configuration
  backend:
    build:
      target: development # Use development stage of Dockerfile
    ports:
      - "8000:8000" # Expose backend port for direct access
    volumes:
      - ./apps/backend:/app # Mount source code for hot reload
      - backend_cache:/app/.venv # Cache virtual environment
    environment:
      FASTAPI_ENV: development
      FASTAPI_RELOAD: "true"
      PYTHONPATH: /app/src
    command: uv run fastapi dev src/main.py --host 0.0.0.0 --port 8000
    # Override health check for faster development cycles
    healthcheck:
      interval: 15s
      timeout: 5s
      retries: 2
      start_period: 10s

  # Frontend - Development Configuration
  frontend:
    build:
      target: development # Use development stage of Dockerfile
    ports:
      - "5173:5173" # Expose Vite dev server port
    volumes:
      - ./apps/frontend:/app # Mount source code for hot reload
      - frontend_node_modules:/app/node_modules # Cache node_modules
    environment:
      NODE_ENV: development
      VITE_HMR_HOST: localhost
    command: npm run dev -- --host 0.0.0.0 --port 5173
    # Override health check for development
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 15s
      timeout: 5s
      retries: 2
      start_period: 30s

  # Optional: MailHog for email testing (uncomment if needed)
  # mailhog:
  #   image: mailhog/mailhog:latest
  #   ports:
  #     - "1025:1025"  # SMTP server
  #     - "8025:8025"  # Web UI
  #   networks:
  #     - pantrypilot-network

  # Adminer (database web UI) - development only
  adminer:
    image: adminer:latest
    restart: unless-stopped
    depends_on:
      - db
    environment:
      ADMINER_DEFAULT_SERVER: db
    ports:
      - "8081:8080"
    networks:
      - pantrypilot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

# Development-specific volumes
volumes:
  backend_cache:
    driver: local
  frontend_node_modules:
    driver: local
