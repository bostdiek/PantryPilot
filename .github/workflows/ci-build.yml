name: CI Build & Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      release_version:
        description: "Optional release version (e.g. 1.0.0) to tag & push images"
        required: false

permissions:
  contents: read
  packages: write
  id-token: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAMESPACE: ${{ github.repository_owner }}
  # Default VITE_API_URL used for build artifacts in CI (override in release jobs if needed)
  VITE_API_URL: http://localhost:8000

jobs:
  lint-test:
    name: Lint & Test (Backend + Frontend)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        run: pip install uv

      - name: Backend deps
        working-directory: apps/backend
        run: uv sync --locked --group dev

      - name: Backend lint
        working-directory: apps/backend
        run: uv run ruff check .

      - name: Backend type check
        working-directory: apps/backend
        run: MYPYPATH=src uv run mypy -p api -p core -p crud -p dependencies -p models -p schemas

      - name: Backend tests
        working-directory: apps/backend
        run: uv run pytest -q

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: apps/frontend/package-lock.json

      - name: Frontend deps
        working-directory: apps/frontend
        run: npm ci --include=dev

      - name: Frontend lint
        working-directory: apps/frontend
        run: npm run lint

      - name: Frontend type check
        working-directory: apps/frontend
        run: npm run type-check

      - name: Frontend unit tests
        working-directory: apps/frontend
        run: npm test -- --run

  build-images:
    name: Build & (optional) Push Images
    runs-on: ubuntu-latest
    needs: lint-test
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - platform: linux/amd64
          - platform: linux/arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Derive version tag
        id: vars
        run: |
          if [ -n "${{ github.event.inputs.release_version }}" ]; then
            echo "VERSION=${{ github.event.inputs.release_version }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref_type }}" = "tag" ]; then
            echo "VERSION=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
          else
            # Use short SHA for non-tag builds
            echo "VERSION=sha-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          fi

      - name: Build & push frontend image (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: ./apps/frontend
          file: ./apps/frontend/Dockerfile
          push: true
          build-args: |
            VITE_API_URL=${{ env.VITE_API_URL }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/pantrypilot-frontend:${{ steps.vars.outputs.VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/pantrypilot-frontend:latest
          platforms: linux/amd64,linux/arm64

      - name: Build & push backend image (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: ./apps/backend
          file: ./apps/backend/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/pantrypilot-backend:${{ steps.vars.outputs.VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/pantrypilot-backend:latest
          platforms: linux/amd64,linux/arm64

      - name: Summary
        run: |
          echo "Images pushed:" >> $GITHUB_STEP_SUMMARY
          echo "- Frontend: ${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/pantrypilot-frontend:${{ steps.vars.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- Backend:  ${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/pantrypilot-backend:${{ steps.vars.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY
