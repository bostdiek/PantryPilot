# HTTPS-enabled configuration for nginx
# Copy this file to conf.d/default.conf and update default.conf when ready for HTTPS
# This provides a template for HTTPS deployment with security headers

server {
    # HTTPS configuration
    listen 443 ssl http2;
    server_name localhost;  # Change to your domain name

    # SSL certificate configuration
    # Update these paths to point to your SSL certificates
    ssl_certificate /etc/ssl/certs/pantrypilot.crt;
    ssl_certificate_key /etc/ssl/private/pantrypilot.key;

    # SSL security configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers \
        ECDHE-RSA-AES256-GCM-SHA512:\
        DHE-RSA-AES256-GCM-SHA512:\
        ECDHE-RSA-AES256-GCM-SHA384:\
        DHE-RSA-AES256-GCM-SHA384:\
        ECDHE-RSA-AES256-SHA384:\
        ECDHE-RSA-AES128-GCM-SHA256:\
        ECDHE-RSA-AES256-SHA:\
        ECDHE-RSA-AES128-SHA:\
        DHE-RSA-AES256-SHA:\
        DHE-RSA-AES128-SHA;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;

    # HSTS (uncomment when HTTPS is properly configured)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # API routes - proxy to FastAPI backend
    location /api/ {
        proxy_pass http://backend:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;

        # Disable gzip for sensitive API endpoints (BREACH attack mitigation)
        gzip off;

        # Additional security headers for API endpoints
        add_header X-Content-Type-Options "nosniff" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
    }

    # Static files - serve React app
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;

        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options "nosniff" always;
        }

        # Don't cache HTML files
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }
    }

    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name localhost;  # Change to your domain name

    # Allow health checks over HTTP
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Allow Let's Encrypt challenges over HTTP
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}
